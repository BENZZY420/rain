-- RainbowGuns wrapper
local RainbowGuns = {}

do
    local player = game.Players.LocalPlayer
    local gunsFolder = workspace:FindFirstChild("GUNS")
    if not gunsFolder then
        warn("GUNS folder not found in workspace!")
        return
    end

    local validGunNames = {}
    for _, gun in ipairs(gunsFolder:GetChildren()) do
        validGunNames[gun.Name] = true
    end

    local activeRainbowThreads = {}

    local function startRainbow(tool)
        if activeRainbowThreads[tool] then return end
        local parts = {}
        for _, part in ipairs(tool:GetDescendants()) do
            if part:IsA("BasePart") then
                table.insert(parts, part)
            end
        end
        if #parts > 0 then
            local stopped = false
            activeRainbowThreads[tool] = function() stopped = true end
            task.spawn(function()
                for _, part in ipairs(parts) do
                    part.Material = Enum.Material.Glass
                    part.Transparency = 0.3
                end
                while not stopped do
                    local now = tick()
                    local step = math.floor(now / 1)
                    local hue = (step % 12) / 12
                    local color = Color3.fromHSV(hue, 1, 1)
                    for _, part in ipairs(parts) do
                        part.Color = color
                    end
                    task.wait(0.05)
                end
            end)
        end
    end

    local function stopRainbow(tool)
        if activeRainbowThreads[tool] then
            activeRainbowThreads[tool]()
            activeRainbowThreads[tool] = nil
        end
    end

    local function stopAllRainbows()
        for tool, stopper in pairs(activeRainbowThreads) do
            stopper()
        end
        activeRainbowThreads = {}
    end

    local function applyToInventoryAndEquipped()
        for _, tool in ipairs(player.Backpack:GetChildren()) do
            if tool:IsA("Tool") and validGunNames[tool.Name] then
                startRainbow(tool)
            end
        end
        if player.Character then
            for _, tool in ipairs(player.Character:GetChildren()) do
                if tool:IsA("Tool") and validGunNames[tool.Name] then
                    startRainbow(tool)
                end
            end
        end
    end

    local function onToolAdded(tool)
        if tool:IsA("Tool") and validGunNames[tool.Name] then
            startRainbow(tool)
        end
    end

    local function connectCharacter(char)
        char.ChildAdded:Connect(onToolAdded)
    end

    -- Expose functions to toggle externally
    function RainbowGuns:Enable()
        applyToInventoryAndEquipped()
        player.Backpack.ChildAdded:Connect(onToolAdded)
        player.CharacterAdded:Connect(connectCharacter)
        if player.Character then
            connectCharacter(player.Character)
        end
    end

    function RainbowGuns:Disable()
        stopAllRainbows()
    end
end

return RainbowGuns
